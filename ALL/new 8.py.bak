from Cred import snmph_from_cred_array

cred_details = {'snmp_version': 3, 'snmpv3_engine_id': '', 'cred_timeout': 1500, 'cred_id': 62, 'snmpv3_sec_level': '', 'snmp_retries': 1, 'snmp_rw_community': '', 'snmp_ro_community': 'public', 'cred_port': 161, 'cred_type': 1, 'snmpv3_auth_proto': 'MD5', 'cred_name': 'SNMP Public V2', 'snmpv3_priv_pwd': '', 'snmpv3_priv_proto': '', 'sub_type': '', 'cred_pwd': '', 'snmpv3_context': '', 'cred_host': '', 'cred_user': ''}


cred_details = {'snmp_version': 3, 'snmpv3_engine_id': '', 'cred_timeout': 500, 'cred_id': 62, 'snmpv3_sec_level': 'authPriv', 'snmp_retries': 1, 'snmp_rw_community': '', 'snmp_ro_community': '', 'cred_port': 161, 'cred_type': 1, 'snmpv3_auth_proto': 'MD5', 'cred_name': 'EM7 Default V3', 'snmpv3_priv_pwd': 'em7privpass', 'snmpv3_priv_proto': 'DES', 'sub_type': '', 'cred_pwd': 'em7authpass', 'snmpv3_context': '', 'cred_host': '', 'cred_user': 'em7defaultv3'}

TARGETIP = '172.30.190.3'

my_snmp_h = snmph_from_cred_array(cred_details, TARGETIP)

ols = {'Host Initial Load Device':'.1.3.6.1.2.1.25.1.3.0','Host Local Time':'.1.3.6.1.2.1.25.1.2.0','Load Parameters':'.1.3.6.1.2.1.25.1.4.0','Max Processes':'.1.3.6.1.2.1.25.1.7.0','Physical Memory Size (Kilobytes)':'.1.3.6.1.2.1.25.2.2.0','Sessions':.1.3.6.1.2.1.25.1.5.0','System Processes':'.1.3.6.1.2.1.25.1.6.0','Uptime':'.1.3.6.1.2.1.25.1.1.0'}

def get_multi_with_chunks(snmp_session, oidlist, chunk_size = 20):
    chunks = [oidlist[i:i + chunk_size] for i in xrange(0, len(oidlist), chunk_size)]
    all_result = None
    for chunk in chunks:
        chunk_result = snmp_session.get_multi(chunk)

        if all(v is None for (k,v) in chunk_result):
            if chunk_size > 10:
                return get_multi_with_chunks(snmp_session, oidlist, 10)
            elif chunk_size > 1:
                return get_multi_with_chunks(snmp_session, oidlist, 1)

        if chunk_result is not None:
            if all_result is not None:
                all_result = all_result + chunk_result
            else:
                all_result = chunk_result
    return all_result
	
allScalarResponseList = get_multi_with_chunks(my_snmp_h,ol)

allScalarResponseDict = {responseOid: responseValue for (responseOid, responseValue) in allScalarResponseList}

objDetails = {}											 
for ol in ols:
    thisResponse = allScalarResponseDict[ol]
    if thisResponse is not None and thisResponse != '':
        objDetails[ol] = [(0, allScalarResponseDict[ol])]											 
											 
											 